apiVersion: v1
kind: Namespace
metadata:
  name: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ws-kubernetes-example
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ws-kubernetes-example
  template:
    metadata:
      labels:
        app: ws-kubernetes-example
    spec:
      containers:
        - name: ws-kubernetes-example
          image: ws-kubernetes-example:v1.0
          resources:
            requests:
              cpu: "100m"
              memory: "100Mi"
            limits:
              cpu: "250m"
              memory: "250Mi"
          imagePullPolicy: Never
          env:
            - name: JAVA_OPTS
              value: -Dserver.port=8080 -Druntime.environment=DEV -Dspring.profiles.active=DEV
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /ws_kubernetes_example/actuator/health
              port: 8080
            initialDelaySeconds: 25
            timeoutSeconds: 5
            periodSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /ws_kubernetes_example/actuator/health
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 1
            failureThreshold: 5
---
kind: Service
apiVersion: v1
metadata:
  name: ws-kubernetes-example
  labels:
    app: ws-kubernetes-example
spec:
  type: NodePort
  selector:
    app: ws-kubernetes-example
  ports:
    - port: 8080
      nodePort: 30000
      protocol: TCP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /ws_kubernetes_example$1
  name: ws-kubernetes-example
spec:
  rules:
    - host: localhost
      http:
        paths:
          - path: /ws_kubernetes_example(.*)
            backend:
              serviceName: ws-kubernetes-example
              servicePort: 8080